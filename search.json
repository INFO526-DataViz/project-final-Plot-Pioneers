[
  {
    "objectID": "proposal.html",
    "href": "proposal.html",
    "title": "World Happiness report",
    "section": "",
    "text": "To create an interactive Shiny app that visualizes and analyzes the World Happiness Report data, enabling users to explore and understand the factors that contribute to happiness worldwide."
  },
  {
    "objectID": "proposal.html#high-level-goal",
    "href": "proposal.html#high-level-goal",
    "title": "World Happiness report",
    "section": "",
    "text": "To create an interactive Shiny app that visualizes and analyzes the World Happiness Report data, enabling users to explore and understand the factors that contribute to happiness worldwide."
  },
  {
    "objectID": "proposal.html#goal-and-motivation",
    "href": "proposal.html#goal-and-motivation",
    "title": "World Happiness report",
    "section": "Goal and Motivation",
    "text": "Goal and Motivation\nOur primary goal with this project is to develop an interactive shiny application that makes the complex data from the World Happiness Report accessible and engaging for a wide audience. The World Happiness Report is a valuable resource that provides insights into the well-being and happiness of people in various countries, but the data can be overwhelming and challenging to interpret. We aim to simplify this process by building an intuitive and user-friendly app that offers a dynamic visual representation of the data. Our motivation for this project is to bridge the gap between valuable but complex data and the end-users who seek to understand it. We believe that by creating an interactive Shiny app for the World Happiness Report, we can empower individuals, researchers, and policymakers to explore and gain insights into global happiness, contributing to a better understanding of well-being and, potentially, to informed decisions that can improve the quality of life for people around the world."
  },
  {
    "objectID": "proposal.html#introduction",
    "href": "proposal.html#introduction",
    "title": "World Happiness report",
    "section": "Introduction",
    "text": "Introduction\n“Are you happy?” Despite being a straightforward question, philosophers, artists, and scientists have been captivated by it for millennia. We take a wonderful tour through the World Happiness Report dataset in our quest to discover what makes people truly happy around the world. This proposal describes how we want to investigate and examine this interesting dataset, which runs from 2015 to 2023. This project attempts to solve the puzzles of happiness in a playful and interesting way. Happiness is a universal quest."
  },
  {
    "objectID": "proposal.html#dataset",
    "href": "proposal.html#dataset",
    "title": "World Happiness report",
    "section": "Dataset",
    "text": "Dataset\n\ndf_2015 &lt;- read.csv(\"data/2015.csv\")\ndf_2016 &lt;- read.csv(\"data/2016.csv\")\ndf_2017 &lt;- read.csv(\"data/2017.csv\")\ndf_2018 &lt;- read.csv(\"data/2018.csv\")\ndf_2019 &lt;- read.csv(\"data/2019.csv\")\ndf_2020 &lt;- read.csv(\"data/2020.csv\")\ndf_2021 &lt;- read.csv(\"data/2021.csv\")\ndf_2022 &lt;- read.csv(\"data/2022.csv\")\ndf_2023 &lt;- read.csv(\"data/2023.csv\")\n\n\nDataset Description\nWe are excited to embark on a journey to explore the World Happiness Report dataset, encompassing the years 2015 to 2023. This engaging and illuminating dataset offers a unique glimpse into the factors influencing global happiness and well-being. Let’s dive into the details of our chosen dataset:\nThe World Happiness Report dataset is sourced directly from the official World Happiness Report website. This esteemed report is published annually by the United Nations, offering insights into the state of happiness and well-being across countries. The dataset is meticulously compiled, verified, and updated each year, making it a reliable source for our analysis.\n\n\nDimensions\nMultiple annual observations, varying from 149 to 158 countries per year.\nCommon variables across dataset:\n\n\n\n\n\n\n\n\nVariable name\ndata Type\ndescription\n\n\n\n\nCountry\nCharacter (chr)\nThe name of the country for which the happiness metrics are recorded.\n\n\nHappiness Rank\nInteger (int)\nThe rank of the country is based on its happiness score.\n\n\nHappiness Score\nDouble (dbl)\nThe score that quantifies the happiness level, is based on various factors such as GDP per capita, social support, life expectancy, freedom to make life choices, generosity, and perceptions of corruption.\n\n\nGDP per Capita\nDouble (dbl)\nDescription: A measure of the country’s economic output that accounts for its population.\n\n\nFamily\nDouble (dbl)\nThe degree to which social support is provided in the country, reflecting family ties or community support.\n\n\nHealth (Life Expectancy)\nDouble (dbl)\nAverage life expectancy in the country, indicating the overall health of the population.\n\n\nFreedom\nDouble (dbl)\nThe level of freedom citizens have to make life choices in the country.\n\n\nTrust (Government Corruption)\nDouble (dbl)\nThe level of trust in the country’s government and the perceived amount of corruption.\n\n\nGenerosity\nDouble (dbl)\nThe average level of generosity of the country’s citizens.\n\n\nDystopia Residual\nDouble (dbl)\nA hypothetical measure that accounts for the unexplained components of happiness from the six factors evaluated.\n\n\n\n\n\nReason for Choosing this Dataset\nThe World Happiness Report dataset offers a perfect blend of intriguing questions and meaningful insights. By exploring this dataset, we aim to understand the factors that contribute to happiness and well-being across diverse societies. Furthermore, we chose this dataset for the following reasons:\n1. Global Relevance: Happiness is a fundamental aspect of human well-being, and this dataset provides a unique perspective on happiness trends worldwide. Our analysis can offer insights into what makes societies and individuals happy, transcending borders and cultures.\n2. Temporal Insights: The dataset covers a wide range of years, enabling us to track happiness trends and identify potential causative factors over time. This temporal dimension adds depth to our analysis.\n\n\nCleaned Dataset for all Years(2015-2023)\n\n# Creating a list of all dataframes for easier handling\nlist_of_dfs &lt;- list(cleaned_2015_df, cleaned_2016_df, cleaned_2017_df, cleaned_2018_df, \n                    cleaned_2019_df, cleaned_2020_df, cleaned_2021_df, cleaned_2022_df, \n                    cleaned_2023_df)\n\n# Merging all dataframes into one\nhappiness_all_years_df &lt;- dplyr::bind_rows(list_of_dfs)\n\n# Check the combined dataframe\nglimpse(happiness_all_years_df)\n\nRows: 1,368\nColumns: 11\n$ Country                         &lt;chr&gt; \"Switzerland\", \"Iceland\", \"Denmark\", \"…\n$ `Happiness Rank`                &lt;int&gt; 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12,…\n$ `Happiness Score`               &lt;dbl&gt; 7.587, 7.561, 7.527, 7.522, 7.427, 7.4…\n$ `GDP per Capita`                &lt;dbl&gt; 1.39651, 1.30232, 1.32548, 1.45900, 1.…\n$ Family                          &lt;dbl&gt; 1.34951, 1.40223, 1.36058, 1.33095, 1.…\n$ `Health (Life Expectancy)`      &lt;dbl&gt; 0.94143, 0.94784, 0.87464, 0.88521, 0.…\n$ Freedom                         &lt;dbl&gt; 0.66557, 0.62877, 0.64938, 0.66973, 0.…\n$ `Trust (Government Corruption)` &lt;dbl&gt; 0.41978, 0.14145, 0.48357, 0.36503, 0.…\n$ Generosity                      &lt;dbl&gt; 0.29678, 0.43630, 0.34139, 0.34699, 0.…\n$ `Dystopia Residual`             &lt;dbl&gt; 2.51738, 2.70201, 2.49204, 2.46531, 2.…\n$ Year                            &lt;dbl&gt; 2015, 2015, 2015, 2015, 2015, 2015, 20…\n\nwrite.csv(happiness_all_years_df, file = \"data/happiness_all_years_df.csv\")\n#glimpse(happiness_all_years_df)"
  },
  {
    "objectID": "proposal.html#questions",
    "href": "proposal.html#questions",
    "title": "World Happiness report",
    "section": "Questions",
    "text": "Questions\n\nHow do various factors contribute to the overall happiness score across different countries over the years?\nCan we identify patterns of change in happiness scores related to global events such as the COVID-19 pandemic?"
  },
  {
    "objectID": "proposal.html#analysis-plan",
    "href": "proposal.html#analysis-plan",
    "title": "World Happiness report",
    "section": "Analysis plan",
    "text": "Analysis plan\n\nApproach for Question 1\nThe different factors involved are as follows : economy (“GDP per capita”), family (“social support”), health(“healthy life expectancy at birth”), freedom (“freedom to make life choices”), trust(“perceptions of corruption”) and generosity (“generosity”).\n\nObjective: Enable users to interactively explore the impact of different variables on happiness scores using a customized interface. The app will feature three drop-down menus: one for selecting countries, one for the x-axis variable, and another for the y-axis variable.\nVisualization: The app will present a customizable scatter plot. Users can select specific years using buttons to display a single point on the graph. Hovering over each point will reveal detailed information about the chosen variables for that point.\nInsights and Exploration: The goal is to identify consistent factors impacting happiness scores across countries and years by allowing users to dynamically visualize and explore data points.\n\n\n\nApproach for Question 2\n\nVariables Involved:\nYear (Data Type: Integer): To identify the annual data points and capture trends over time.\nCountry (Data Type: Character): For geographical mapping and comparison between nations.\nHappiness Score and related factors (Data Type: Double): To analyze changes and correlations.\nVariables to be Created:\nPandemic Period (Data Type: Character): A derived variable indicating pre-pandemic, during-pandemic, and post-pandemic periods.\nChange in Happiness Score (Data Type: Double): The difference in happiness scores from one year to the next.\nAverage Change per Period (Data Type: Double): The average change in happiness scores for each period (pre, during, post-pandemic).\nAnalysis and Visualization:\nTrend Analysis: Create line graphs to visualize happiness scores over the years, with a clear demarcation of the pandemic period.\nPandemic Impact: Zoom in on the period of the pandemic to analyze specific shifts or anomalies in happiness trends.\nCorrelation and Comparison: Utilize heatmaps to provide a visual correlation matrix between happiness scores and other variables. Conduct statistical tests (like t-tests or ANOVA) to contrast the differences in happiness levels across different periods.\nCausality and Control: Implement a causal analysis, such as difference-in-differences, to evaluate the pandemic’s impact on happiness while controlling for other variables like GDP per capita.\nVisualizations: Develop visualizations that highlight the onset of the pandemic, using markers or shaded areas on the line graphs. Create scatter plots and box plots to compare happiness against other variables across different timeframes.\nShiny App Features: Intuitive UI guiding through data and findings. Reactive visuals that update with user input. Interactive elements like sliders and drop downs for custom analyses.\nAnalysis and Reporting: Note regional happiness shifts and anomalies. Combine statistical results and visual insights. Conclude on the link between pandemic and happiness scores, considering data limits.\nNote:\nIn the event of encountering global occurrences beyond COVID-19 that have a sustained impact on the world, we will incorporate them into our future considerations."
  },
  {
    "objectID": "proposal.html#plan-of-attack",
    "href": "proposal.html#plan-of-attack",
    "title": "World Happiness report",
    "section": "Plan of Attack",
    "text": "Plan of Attack\n\nWeek 1: (Oct 16 - Oct 22) [Everyone]\n\nData Selection and Initial Planning\n\nTasks:\n\nIdentify and download the World Happiness Report dataset.\nClean and preprocess the data, removing any inconsistencies or missing values.\nFamiliarizing with the dataset’s structure and variables.\nAnalysing more on the specific questions we want to address and the visualizations.\nBegin designing a rough sketch of the shiny app’s layout.\n\n\n\n\n\nWeek 2: (Oct 23 - Oct 29)[Everyone]\n\nProposal Writing\n\nTasks:\n\nWrite a project proposal that includes the project’s goals, objectives, and scope.\nDefine the questions you aim to answer with the shiny application.\nOutline the design and interactivity features we plan to include.\nCreate a project timeline with specific milestones.\n\n\n\n\n\nWeek 3: (Oct 30 - Nov 5) [Everyone]\n\nData Exploration and Visualization Planning\n\nTasks:\n\nConduct exploratory data analysis (EDA) to understand the dataset better.\nIdentify interesting patterns, correlations, or outliers in the data.\nSketch initial ideas for the app’s layout and visualizations.\n\n\n\n\n\nWeek 4: (Nov 6 - Nov 12) [Everyone]\n\nShiny Application Layout Designing\n\nTasks:\n\nSelect the tools and libraries to be used for creating the app.\nPlan the layout, including the placement of plots, widgets, and navigation.\nCreate a wireframe for user interface.\n\n\n\n\n\nWeek 5: (Nov 13 - Nov 19) [TBD]\n\nPlot Creation\n\nTasks:\n\nDevelop the plots and interactive components.\nEnsure that the plots represent the data accurately and are visually appealing.\nInitial integration of interactive elements into the shiny app.\n\n\n\n\n\nWeek 6: (Nov 20 - Nov 26) [TBD]\n\nShiny App Development and Refinement\n\nTasks:\n\nCode the functionality of the app using Shiny’s reactive elements.\nImplement interactivity features like dropdowns and filters.\nTest the app’s performance and user experience.\n\n\n\n\n\nWeek 7: (Nov 27 - Dec 3) [Everyone]\n\nTesting and Modifications\n\nTasks:\n\nConduct testing to identify and fix any bugs or issues.\nGather feedback.\nMake improvements based on the feedback received.\n\n\n\n\n\nWeek 8: (Dec 4 - Dec11) [Everyone]\n\nFinalization and Presentation\n\nTasks:\n\nMake any final refinements to the application.\nComplete the write-up or documentation.\nPrepare a presentation for the project."
  },
  {
    "objectID": "proposal.html#repo-organisation",
    "href": "proposal.html#repo-organisation",
    "title": "World Happiness report",
    "section": "Repo Organisation",
    "text": "Repo Organisation\n\n‘_extra/’: Serves as a repository for informal materials, notes, experimental content, and other items not directly related to the project but retained for potential future reference, without undergoing formal review or grading.\n‘_freeze/’: Reserved for storing generated files during the build process, representing the static state of the website at a specific point in time.\n‘_site/’: Used to contain the static website files generated after processing the quarto document.\n‘.github/’: Folder for organizing GitHub templates and workflows.\n‘data/’: Reserved for storing essential data files used in the project, such as input csv files.\n‘images/’: Dedicated to housing image files utilized within the project or generated images.\n‘presentation_files/’: Designated folder for managing files related to presentations."
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "World Happiness Report",
    "section": "",
    "text": "This project focuses on developing an interactive Shiny application to transform the intricate data from the World Happiness Report into an accessible and engaging platform for a diverse audience. While the report offers valuable insights into the happiness and well-being of individuals across countries, the complexity of the data often poses challenges in interpretation. Our objective is to simplify this process by creating an intuitive and user-friendly app that dynamically visualizes the data. The driving force behind our initiative is to bridge the gap between the richness of complex data and end-users seeking comprehension.\n\n\n\ndf_2015 &lt;- read.csv(\"data/2015.csv\")\ndf_2016 &lt;- read.csv(\"data/2016.csv\")\ndf_2017 &lt;- read.csv(\"data/2017.csv\")\ndf_2018 &lt;- read.csv(\"data/2018.csv\")\ndf_2019 &lt;- read.csv(\"data/2019.csv\")\ndf_2020 &lt;- read.csv(\"data/2020.csv\")\ndf_2021 &lt;- read.csv(\"data/2021.csv\")\ndf_2022 &lt;- read.csv(\"data/2022.csv\")\ndf_2023 &lt;- read.csv(\"data/2023.csv\")\nstr(df_2015)\nstr(df_2016)\nstr(df_2017)\nstr(df_2018)\nstr(df_2019)\nstr(df_2020)\nstr(df_2021)\nstr(df_2022)\nstr(df_2023)\nlibrary(dplyr)\n\n#2015\n\n# Read CSV files and import into dataframes\nfile_1 &lt;- read.csv(\"data/2015.csv\")\nhappiness_2015_df &lt;- file_1\n\n# Clean up the dataframe to rename data and match to all other years\nhappiness_2015_df &lt;- happiness_2015_df %&gt;%\n  select(-Region) %&gt;%\n  rename(`Happiness Rank` = `Happiness.Rank`,\n    `Happiness Score` = `Happiness.Score`,\n    `Economy` = `Economy..GDP.per.Capita.`,\n    `Health` = `Health..Life.Expectancy.`,\n    `Government Corruption` = `Trust..Government.Corruption.`,\n    `Dystopia Residual` = `Dystopia.Residual`) %&gt;%\n  select(-`Standard.Error`)\n\n# Display the first few rows\nhead(happiness_2015_df)\n\n\n#2016\n\nfile_2 &lt;- read.csv(\"data/2016.csv\")\nhappiness_2016_df &lt;- file_2\n\n# Clean up the dataframe to rename data and match to all other years\nhappiness_2016_df &lt;- happiness_2016_df %&gt;%\n  select(-Region) %&gt;%\n  rename(`Happiness Rank` = `Happiness.Rank`,\n    `Happiness Score` = `Happiness.Score`,\n    `Economy` = `Economy..GDP.per.Capita.`,\n    `Health` = `Health..Life.Expectancy.`,\n    `Government Corruption` = `Trust..Government.Corruption.`,\n    `Dystopia Residual` = `Dystopia.Residual`) %&gt;%\n  select(-`Lower.Confidence.Interval`, -`Upper.Confidence.Interval`)\n\n# Display the first few rows\nhead(happiness_2016_df)\n\n#2017\n\nfile_3 &lt;- read.csv(\"data/2017.csv\")\nhappiness_2017_df &lt;- file_3\n\n# Clean up the dataframe to rename data and match to all other years\nhappiness_2017_df &lt;- happiness_2017_df %&gt;%\n  rename(\n    `Happiness Rank` = `Happiness.Rank`,\n    `Happiness Score` = `Happiness.Score`,\n    `Economy` = `Economy..GDP.per.Capita.`,\n    `Health` = `Health..Life.Expectancy.`,\n    `Government Corruption` = `Trust..Government.Corruption.`,\n    `Dystopia Residual` = `Dystopia.Residual`\n  ) %&gt;%\n  select(-`Whisker.high`, -`Whisker.low`)\n\n# Display the first few rows\nhead(happiness_2017_df)\n\n#2018\n\nfile_4 &lt;- read.csv(\"data/2018.csv\")\nhappiness_2018_df &lt;- file_4\n\n# Clean up the dataframe to rename data and match to all other years\nhappiness_2018_df &lt;- happiness_2018_df %&gt;%\n  rename(\n    `Happiness Rank` = `Overall.rank`,\n    `Country` = `Country.or.region`,\n    `Happiness Score` = `Score`,\n    `Economy` = `GDP.per.capita`,\n    `Family` = `Social.support`,\n    `Health` = `Healthy.life.expectancy`,\n    `Freedom` = `Freedom.to.make.life.choices`,\n    `Government Corruption` = `Perceptions.of.corruption`\n  )\n\n# Assuming we want to convert the 'Happiness.score' column to numeric\nhappiness_2018_df$`Government Corruption` &lt;- as.numeric(gsub(\",\", \".\", happiness_2018_df$`Government Corruption`))\n# Display the first few rows\nhead(happiness_2018_df)\n\n\n\n\n#2019\n\n\n\nfile_5 &lt;- read.csv(\"data/2019.csv\")\nhappiness_2019_df &lt;- file_5\n\n# Clean up the dataframe to rename data and match to all other years\nhappiness_2019_df &lt;- happiness_2019_df %&gt;%\n  rename(\n    `Happiness Rank` = `Overall.rank`,\n    `Country` = `Country.or.region`,\n    `Happiness Score` = `Score`,\n    `Economy` = `GDP.per.capita`,\n    `Family` = `Social.support`,\n    `Health` = `Healthy.life.expectancy`,\n    `Freedom` = `Freedom.to.make.life.choices`,\n    `Government Corruption` = `Perceptions.of.corruption`\n  )\n\n# Display the first few rows\nhead(happiness_2019_df)\n\n\n# Add the 'Dystopia Residual' column to the 2018 and 2019 dataframes\nhappiness_2018_df$`Dystopia Residual` &lt;- NA\nhappiness_2019_df$`Dystopia Residual` &lt;- NA\n\n#2020\n\n\nfile_6 &lt;- read.csv(\"data/2020.csv\")\nhappiness_2020_df &lt;- file_6\n\n# Clean up the dataframe to rename data and match to all other years\nhappiness_2020_df &lt;- happiness_2020_df %&gt;%\n  select(-`Generosity`) %&gt;%\n  rename(\n    `Country` = `Country.name`,\n    `Happiness Score` = `Ladder.score`,\n    `Economy` = `Explained.by..Log.GDP.per.capita`,\n    `Family` = `Explained.by..Social.support`,\n    `Health` = `Explained.by..Healthy.life.expectancy`,\n    `Freedom` = `Explained.by..Freedom.to.make.life.choices`,\n    `Government Corruption` = `Explained.by..Perceptions.of.corruption`,\n    `Generosity` = `Explained.by..Generosity`,\n    `Dystopia Residual` = `Dystopia...residual`\n  ) %&gt;%\n  select(-`Regional.indicator`, -`Standard.error.of.ladder.score`, -`upperwhisker`, -`lowerwhisker`,-`Logged.GDP.per.capita`, -`Social.support`, -`Healthy.life.expectancy`, -`Freedom.to.make.life.choices`, -`Perceptions.of.corruption`, -`Ladder.score.in.Dystopia`)\n\n# Add a \"Happiness Rank\" column after the \"Country\" column\nhappiness_2020_df &lt;- happiness_2020_df %&gt;%\n  mutate(`Happiness Rank` = rank(-`Happiness Score`, ties.method = \"first\")) %&gt;%\n  select(Country, `Happiness Rank`, everything())\n\n#Display the first few rows\nhead(happiness_2020_df)\n\n#2021\n\nfile_7 &lt;- read.csv(\"data/2021.csv\")\nhappiness_2021_df &lt;- file_7\n\n# Clean up the dataframe to rename data and match to all other years\nhappiness_2021_df &lt;- happiness_2021_df %&gt;%\n  select(-`Generosity`) %&gt;%\n  rename(\n    `Country` = `Country.name`,\n    `Happiness Score` = `Ladder.score`,\n    `Economy` = `Explained.by..Log.GDP.per.capita`,\n    `Family` = `Explained.by..Social.support`,\n    `Health` = `Explained.by..Healthy.life.expectancy`,\n    `Freedom` = `Explained.by..Freedom.to.make.life.choices`,\n    `Government Corruption` = `Explained.by..Perceptions.of.corruption`,\n    `Generosity` = `Explained.by..Generosity`,\n    `Dystopia Residual` = `Dystopia...residual`\n  ) %&gt;%\n  select(-`Regional.indicator`, -`Standard.error.of.ladder.score`, -`upperwhisker`, -`lowerwhisker`,-`Logged.GDP.per.capita`, -`Social.support`, -`Healthy.life.expectancy`, -`Freedom.to.make.life.choices`, -`Perceptions.of.corruption`, -`Ladder.score.in.Dystopia`)\n\n# Add a \"Happiness Rank\" column after the \"Country\" column\nhappiness_2021_df &lt;- happiness_2021_df %&gt;%\n  mutate(`Happiness Rank` = rank(-`Happiness Score`, ties.method = \"first\")) %&gt;%\n  select(Country, `Happiness Rank`, everything())\n\n#Display the first few rows\nhead(happiness_2021_df)\n\n\n#2022\n\nfile_8 &lt;- read.csv(\"data/2022.csv\")\nhappiness_2022_df &lt;- file_8\n\n# Convert only specific columns that contain numbers\nnumeric_cols &lt;- c('Happiness.score', 'Explained.by..GDP.per.capita', 'Explained.by..Social.support', \n                  'Explained.by..Healthy.life.expectancy', 'Explained.by..Freedom.to.make.life.choices', \n                  'Explained.by..Perceptions.of.corruption', 'Explained.by..Generosity', \n                  'Dystopia..1.83....residual')\n\nhappiness_2022_df[numeric_cols] &lt;- lapply(happiness_2022_df[numeric_cols], function(x) {\n  as.numeric(gsub(\",\", \".\", x))\n})\n\n\n# Clean up the dataframe to rename data and match to all other years\nhappiness_2022_df &lt;- happiness_2022_df %&gt;%\n  rename(\n    `Happiness Rank` = `RANK`,\n    `Happiness Score` = `Happiness.score`,\n    `Economy` = `Explained.by..GDP.per.capita`,\n    `Family` = `Explained.by..Social.support`,\n    `Health` = `Explained.by..Healthy.life.expectancy`,\n    `Freedom` = `Explained.by..Freedom.to.make.life.choices`,\n    `Government Corruption` = `Explained.by..Perceptions.of.corruption`,\n    `Generosity` = `Explained.by..Generosity`,\n    `Dystopia Residual` = `Dystopia..1.83....residual`\n  ) %&gt;%\n  select( -`Whisker.high`, -`Whisker.low`) \n\n#Display the first few rows\nhead(happiness_2022_df)\n\n\n#2023\n\n\nfile_9 &lt;- read.csv(\"data/2023.csv\")\nhappiness_2023_df &lt;- file_9\n\n# Clean up the dataframe to rename data and match to all other years\nhappiness_2023_df &lt;- happiness_2023_df %&gt;%\n  select(-`Generosity`) %&gt;%\n  rename(\n    `Country` = `Country.name`,\n    `Happiness Score` = `Ladder.score`,\n    `Economy` = `Explained.by..Log.GDP.per.capita`,\n    `Family` = `Explained.by..Social.support`,\n    `Health` = `Explained.by..Healthy.life.expectancy`,\n    `Freedom` = `Explained.by..Freedom.to.make.life.choices`,\n    `Government Corruption` = `Explained.by..Perceptions.of.corruption`,\n    `Generosity` = `Explained.by..Generosity`,\n    `Dystopia Residual` = `Dystopia...residual`\n  ) %&gt;%\n  select( -`Standard.error.of.ladder.score`, -`upperwhisker`, -`lowerwhisker`,-`Logged.GDP.per.capita`, -`Social.support`, -`Healthy.life.expectancy`, -`Freedom.to.make.life.choices`, -`Perceptions.of.corruption`, -`Ladder.score.in.Dystopia`)\n\n# Add a \"Happiness Rank\" column after the \"Country\" column\nhappiness_2023_df &lt;- happiness_2023_df %&gt;%\n  mutate(`Happiness Rank` = rank(-`Happiness Score`, ties.method = \"first\")) %&gt;%\n  select(Country, `Happiness Rank`, everything())\n\n#Display the first few rows\nhead(happiness_2023_df)\n\n\n\n# Adding 'Year' column to each dataframe\nhappiness_2015_df$Year &lt;- 2015\nhappiness_2016_df$Year &lt;- 2016\nhappiness_2017_df$Year &lt;- 2017\nhappiness_2018_df$Year &lt;- 2018\nhappiness_2019_df$Year &lt;- 2019\nhappiness_2020_df$Year &lt;- 2020\nhappiness_2021_df$Year &lt;- 2021\nhappiness_2022_df$Year &lt;- 2022\nhappiness_2023_df$Year &lt;- 2023\n\n# Save the updated combined dataset\nwrite.csv(happiness_2015_df, 'data/cleaned_2015_df.csv', row.names = FALSE)\n\n# Save the updated combined dataset\nwrite.csv(happiness_2016_df, 'data/cleaned_2016_df.csv', row.names = FALSE)\n\n# Save the updated combined dataset\nwrite.csv(happiness_2017_df, 'data/cleaned_2017_df.csv', row.names = FALSE)\n\n# Save the updated combined dataset\nwrite.csv(happiness_2018_df, 'data/cleaned_2018_df.csv', row.names = FALSE)\n\n# Save the updated combined dataset\nwrite.csv(happiness_2019_df, 'data/cleaned_2019_df.csv', row.names = FALSE)\n\n# Save the updated combined dataset\nwrite.csv(happiness_2020_df, 'data/cleaned_2020_df.csv', row.names = FALSE)\n\n# Save the updated combined dataset\nwrite.csv(happiness_2021_df, 'data/cleaned_2021_df.csv', row.names = FALSE)\n\n\n# Save the updated combined dataset\nwrite.csv(happiness_2022_df, 'data/cleaned_2022_df.csv', row.names = FALSE)\n\n\n# Save the updated combined dataset\nwrite.csv(happiness_2023_df, 'data/cleaned_2023_df.csv', row.names = FALSE)\n\n\n# Creating a list of all dataframes for easier handling\nlist_of_dfs &lt;- list(happiness_2015_df, happiness_2016_df, happiness_2017_df, happiness_2018_df, \n                    happiness_2019_df, happiness_2020_df, happiness_2021_df, happiness_2022_df, \n                    happiness_2023_df)\n\n# Merging all dataframes into one\nhappiness_all_years_df &lt;- dplyr::bind_rows(list_of_dfs)\n\n# Check the combined dataframe\nprint(happiness_all_years_df)\nstr(happiness_all_years_df)"
  },
  {
    "objectID": "index.html#abstract",
    "href": "index.html#abstract",
    "title": "World Happiness Report",
    "section": "",
    "text": "This project focuses on developing an interactive Shiny application to transform the intricate data from the World Happiness Report into an accessible and engaging platform for a diverse audience. While the report offers valuable insights into the happiness and well-being of individuals across countries, the complexity of the data often poses challenges in interpretation. Our objective is to simplify this process by creating an intuitive and user-friendly app that dynamically visualizes the data. The driving force behind our initiative is to bridge the gap between the richness of complex data and end-users seeking comprehension.\n\n\n\ndf_2015 &lt;- read.csv(\"data/2015.csv\")\ndf_2016 &lt;- read.csv(\"data/2016.csv\")\ndf_2017 &lt;- read.csv(\"data/2017.csv\")\ndf_2018 &lt;- read.csv(\"data/2018.csv\")\ndf_2019 &lt;- read.csv(\"data/2019.csv\")\ndf_2020 &lt;- read.csv(\"data/2020.csv\")\ndf_2021 &lt;- read.csv(\"data/2021.csv\")\ndf_2022 &lt;- read.csv(\"data/2022.csv\")\ndf_2023 &lt;- read.csv(\"data/2023.csv\")\nstr(df_2015)\nstr(df_2016)\nstr(df_2017)\nstr(df_2018)\nstr(df_2019)\nstr(df_2020)\nstr(df_2021)\nstr(df_2022)\nstr(df_2023)\nlibrary(dplyr)\n\n#2015\n\n# Read CSV files and import into dataframes\nfile_1 &lt;- read.csv(\"data/2015.csv\")\nhappiness_2015_df &lt;- file_1\n\n# Clean up the dataframe to rename data and match to all other years\nhappiness_2015_df &lt;- happiness_2015_df %&gt;%\n  select(-Region) %&gt;%\n  rename(`Happiness Rank` = `Happiness.Rank`,\n    `Happiness Score` = `Happiness.Score`,\n    `Economy` = `Economy..GDP.per.Capita.`,\n    `Health` = `Health..Life.Expectancy.`,\n    `Government Corruption` = `Trust..Government.Corruption.`,\n    `Dystopia Residual` = `Dystopia.Residual`) %&gt;%\n  select(-`Standard.Error`)\n\n# Display the first few rows\nhead(happiness_2015_df)\n\n\n#2016\n\nfile_2 &lt;- read.csv(\"data/2016.csv\")\nhappiness_2016_df &lt;- file_2\n\n# Clean up the dataframe to rename data and match to all other years\nhappiness_2016_df &lt;- happiness_2016_df %&gt;%\n  select(-Region) %&gt;%\n  rename(`Happiness Rank` = `Happiness.Rank`,\n    `Happiness Score` = `Happiness.Score`,\n    `Economy` = `Economy..GDP.per.Capita.`,\n    `Health` = `Health..Life.Expectancy.`,\n    `Government Corruption` = `Trust..Government.Corruption.`,\n    `Dystopia Residual` = `Dystopia.Residual`) %&gt;%\n  select(-`Lower.Confidence.Interval`, -`Upper.Confidence.Interval`)\n\n# Display the first few rows\nhead(happiness_2016_df)\n\n#2017\n\nfile_3 &lt;- read.csv(\"data/2017.csv\")\nhappiness_2017_df &lt;- file_3\n\n# Clean up the dataframe to rename data and match to all other years\nhappiness_2017_df &lt;- happiness_2017_df %&gt;%\n  rename(\n    `Happiness Rank` = `Happiness.Rank`,\n    `Happiness Score` = `Happiness.Score`,\n    `Economy` = `Economy..GDP.per.Capita.`,\n    `Health` = `Health..Life.Expectancy.`,\n    `Government Corruption` = `Trust..Government.Corruption.`,\n    `Dystopia Residual` = `Dystopia.Residual`\n  ) %&gt;%\n  select(-`Whisker.high`, -`Whisker.low`)\n\n# Display the first few rows\nhead(happiness_2017_df)\n\n#2018\n\nfile_4 &lt;- read.csv(\"data/2018.csv\")\nhappiness_2018_df &lt;- file_4\n\n# Clean up the dataframe to rename data and match to all other years\nhappiness_2018_df &lt;- happiness_2018_df %&gt;%\n  rename(\n    `Happiness Rank` = `Overall.rank`,\n    `Country` = `Country.or.region`,\n    `Happiness Score` = `Score`,\n    `Economy` = `GDP.per.capita`,\n    `Family` = `Social.support`,\n    `Health` = `Healthy.life.expectancy`,\n    `Freedom` = `Freedom.to.make.life.choices`,\n    `Government Corruption` = `Perceptions.of.corruption`\n  )\n\n# Assuming we want to convert the 'Happiness.score' column to numeric\nhappiness_2018_df$`Government Corruption` &lt;- as.numeric(gsub(\",\", \".\", happiness_2018_df$`Government Corruption`))\n# Display the first few rows\nhead(happiness_2018_df)\n\n\n\n\n#2019\n\n\n\nfile_5 &lt;- read.csv(\"data/2019.csv\")\nhappiness_2019_df &lt;- file_5\n\n# Clean up the dataframe to rename data and match to all other years\nhappiness_2019_df &lt;- happiness_2019_df %&gt;%\n  rename(\n    `Happiness Rank` = `Overall.rank`,\n    `Country` = `Country.or.region`,\n    `Happiness Score` = `Score`,\n    `Economy` = `GDP.per.capita`,\n    `Family` = `Social.support`,\n    `Health` = `Healthy.life.expectancy`,\n    `Freedom` = `Freedom.to.make.life.choices`,\n    `Government Corruption` = `Perceptions.of.corruption`\n  )\n\n# Display the first few rows\nhead(happiness_2019_df)\n\n\n# Add the 'Dystopia Residual' column to the 2018 and 2019 dataframes\nhappiness_2018_df$`Dystopia Residual` &lt;- NA\nhappiness_2019_df$`Dystopia Residual` &lt;- NA\n\n#2020\n\n\nfile_6 &lt;- read.csv(\"data/2020.csv\")\nhappiness_2020_df &lt;- file_6\n\n# Clean up the dataframe to rename data and match to all other years\nhappiness_2020_df &lt;- happiness_2020_df %&gt;%\n  select(-`Generosity`) %&gt;%\n  rename(\n    `Country` = `Country.name`,\n    `Happiness Score` = `Ladder.score`,\n    `Economy` = `Explained.by..Log.GDP.per.capita`,\n    `Family` = `Explained.by..Social.support`,\n    `Health` = `Explained.by..Healthy.life.expectancy`,\n    `Freedom` = `Explained.by..Freedom.to.make.life.choices`,\n    `Government Corruption` = `Explained.by..Perceptions.of.corruption`,\n    `Generosity` = `Explained.by..Generosity`,\n    `Dystopia Residual` = `Dystopia...residual`\n  ) %&gt;%\n  select(-`Regional.indicator`, -`Standard.error.of.ladder.score`, -`upperwhisker`, -`lowerwhisker`,-`Logged.GDP.per.capita`, -`Social.support`, -`Healthy.life.expectancy`, -`Freedom.to.make.life.choices`, -`Perceptions.of.corruption`, -`Ladder.score.in.Dystopia`)\n\n# Add a \"Happiness Rank\" column after the \"Country\" column\nhappiness_2020_df &lt;- happiness_2020_df %&gt;%\n  mutate(`Happiness Rank` = rank(-`Happiness Score`, ties.method = \"first\")) %&gt;%\n  select(Country, `Happiness Rank`, everything())\n\n#Display the first few rows\nhead(happiness_2020_df)\n\n#2021\n\nfile_7 &lt;- read.csv(\"data/2021.csv\")\nhappiness_2021_df &lt;- file_7\n\n# Clean up the dataframe to rename data and match to all other years\nhappiness_2021_df &lt;- happiness_2021_df %&gt;%\n  select(-`Generosity`) %&gt;%\n  rename(\n    `Country` = `Country.name`,\n    `Happiness Score` = `Ladder.score`,\n    `Economy` = `Explained.by..Log.GDP.per.capita`,\n    `Family` = `Explained.by..Social.support`,\n    `Health` = `Explained.by..Healthy.life.expectancy`,\n    `Freedom` = `Explained.by..Freedom.to.make.life.choices`,\n    `Government Corruption` = `Explained.by..Perceptions.of.corruption`,\n    `Generosity` = `Explained.by..Generosity`,\n    `Dystopia Residual` = `Dystopia...residual`\n  ) %&gt;%\n  select(-`Regional.indicator`, -`Standard.error.of.ladder.score`, -`upperwhisker`, -`lowerwhisker`,-`Logged.GDP.per.capita`, -`Social.support`, -`Healthy.life.expectancy`, -`Freedom.to.make.life.choices`, -`Perceptions.of.corruption`, -`Ladder.score.in.Dystopia`)\n\n# Add a \"Happiness Rank\" column after the \"Country\" column\nhappiness_2021_df &lt;- happiness_2021_df %&gt;%\n  mutate(`Happiness Rank` = rank(-`Happiness Score`, ties.method = \"first\")) %&gt;%\n  select(Country, `Happiness Rank`, everything())\n\n#Display the first few rows\nhead(happiness_2021_df)\n\n\n#2022\n\nfile_8 &lt;- read.csv(\"data/2022.csv\")\nhappiness_2022_df &lt;- file_8\n\n# Convert only specific columns that contain numbers\nnumeric_cols &lt;- c('Happiness.score', 'Explained.by..GDP.per.capita', 'Explained.by..Social.support', \n                  'Explained.by..Healthy.life.expectancy', 'Explained.by..Freedom.to.make.life.choices', \n                  'Explained.by..Perceptions.of.corruption', 'Explained.by..Generosity', \n                  'Dystopia..1.83....residual')\n\nhappiness_2022_df[numeric_cols] &lt;- lapply(happiness_2022_df[numeric_cols], function(x) {\n  as.numeric(gsub(\",\", \".\", x))\n})\n\n\n# Clean up the dataframe to rename data and match to all other years\nhappiness_2022_df &lt;- happiness_2022_df %&gt;%\n  rename(\n    `Happiness Rank` = `RANK`,\n    `Happiness Score` = `Happiness.score`,\n    `Economy` = `Explained.by..GDP.per.capita`,\n    `Family` = `Explained.by..Social.support`,\n    `Health` = `Explained.by..Healthy.life.expectancy`,\n    `Freedom` = `Explained.by..Freedom.to.make.life.choices`,\n    `Government Corruption` = `Explained.by..Perceptions.of.corruption`,\n    `Generosity` = `Explained.by..Generosity`,\n    `Dystopia Residual` = `Dystopia..1.83....residual`\n  ) %&gt;%\n  select( -`Whisker.high`, -`Whisker.low`) \n\n#Display the first few rows\nhead(happiness_2022_df)\n\n\n#2023\n\n\nfile_9 &lt;- read.csv(\"data/2023.csv\")\nhappiness_2023_df &lt;- file_9\n\n# Clean up the dataframe to rename data and match to all other years\nhappiness_2023_df &lt;- happiness_2023_df %&gt;%\n  select(-`Generosity`) %&gt;%\n  rename(\n    `Country` = `Country.name`,\n    `Happiness Score` = `Ladder.score`,\n    `Economy` = `Explained.by..Log.GDP.per.capita`,\n    `Family` = `Explained.by..Social.support`,\n    `Health` = `Explained.by..Healthy.life.expectancy`,\n    `Freedom` = `Explained.by..Freedom.to.make.life.choices`,\n    `Government Corruption` = `Explained.by..Perceptions.of.corruption`,\n    `Generosity` = `Explained.by..Generosity`,\n    `Dystopia Residual` = `Dystopia...residual`\n  ) %&gt;%\n  select( -`Standard.error.of.ladder.score`, -`upperwhisker`, -`lowerwhisker`,-`Logged.GDP.per.capita`, -`Social.support`, -`Healthy.life.expectancy`, -`Freedom.to.make.life.choices`, -`Perceptions.of.corruption`, -`Ladder.score.in.Dystopia`)\n\n# Add a \"Happiness Rank\" column after the \"Country\" column\nhappiness_2023_df &lt;- happiness_2023_df %&gt;%\n  mutate(`Happiness Rank` = rank(-`Happiness Score`, ties.method = \"first\")) %&gt;%\n  select(Country, `Happiness Rank`, everything())\n\n#Display the first few rows\nhead(happiness_2023_df)\n\n\n\n# Adding 'Year' column to each dataframe\nhappiness_2015_df$Year &lt;- 2015\nhappiness_2016_df$Year &lt;- 2016\nhappiness_2017_df$Year &lt;- 2017\nhappiness_2018_df$Year &lt;- 2018\nhappiness_2019_df$Year &lt;- 2019\nhappiness_2020_df$Year &lt;- 2020\nhappiness_2021_df$Year &lt;- 2021\nhappiness_2022_df$Year &lt;- 2022\nhappiness_2023_df$Year &lt;- 2023\n\n# Save the updated combined dataset\nwrite.csv(happiness_2015_df, 'data/cleaned_2015_df.csv', row.names = FALSE)\n\n# Save the updated combined dataset\nwrite.csv(happiness_2016_df, 'data/cleaned_2016_df.csv', row.names = FALSE)\n\n# Save the updated combined dataset\nwrite.csv(happiness_2017_df, 'data/cleaned_2017_df.csv', row.names = FALSE)\n\n# Save the updated combined dataset\nwrite.csv(happiness_2018_df, 'data/cleaned_2018_df.csv', row.names = FALSE)\n\n# Save the updated combined dataset\nwrite.csv(happiness_2019_df, 'data/cleaned_2019_df.csv', row.names = FALSE)\n\n# Save the updated combined dataset\nwrite.csv(happiness_2020_df, 'data/cleaned_2020_df.csv', row.names = FALSE)\n\n# Save the updated combined dataset\nwrite.csv(happiness_2021_df, 'data/cleaned_2021_df.csv', row.names = FALSE)\n\n\n# Save the updated combined dataset\nwrite.csv(happiness_2022_df, 'data/cleaned_2022_df.csv', row.names = FALSE)\n\n\n# Save the updated combined dataset\nwrite.csv(happiness_2023_df, 'data/cleaned_2023_df.csv', row.names = FALSE)\n\n\n# Creating a list of all dataframes for easier handling\nlist_of_dfs &lt;- list(happiness_2015_df, happiness_2016_df, happiness_2017_df, happiness_2018_df, \n                    happiness_2019_df, happiness_2020_df, happiness_2021_df, happiness_2022_df, \n                    happiness_2023_df)\n\n# Merging all dataframes into one\nhappiness_all_years_df &lt;- dplyr::bind_rows(list_of_dfs)\n\n# Check the combined dataframe\nprint(happiness_all_years_df)\nstr(happiness_all_years_df)"
  },
  {
    "objectID": "index.html#introduction-1",
    "href": "index.html#introduction-1",
    "title": "World Happiness Report",
    "section": "Introduction",
    "text": "Introduction\n\nHow do various factors impact the overall happiness score across different countries over the years?\nWe explore the complex interactions between many elements that affect general well-being in our quest to comprehend happiness on a global scale. We seek to understand how factors, such as economic stability, family support, health, freedom, trust in society, and generosity, affect the overall happiness scores throughout time and in different nations. By enabling users to interact with the data, this exploration reveals the complex connections between these important variables and the pursuit of happiness as a group.\nIn our pursuit to understand happiness on a global scale, we delve into the intricate interplay of diverse factors that contribute to overall well-being. By examining economic stability, family support, health, freedom, trust in society, and generosity, we aim to discern how these facets influence the overarching happiness scores across different countries and over time. This exploration empowers users to interactively engage with data, unraveling the intricate relationship between these pivotal factors and the collective pursuit of happiness."
  },
  {
    "objectID": "index.html#approach",
    "href": "index.html#approach",
    "title": "World Happiness Report",
    "section": "Approach",
    "text": "Approach\nIn our interactive Shiny application, we offer users an intuitive platform for dynamic data exploration. Featuring three dropdown menus for the x-axis, y-axis, and country selection (allowing multi-country selection), alongside nine buttons for years spanning from 2015 to 2023, users can precisely pinpoint specific years for analysis. Additionally, a slider facilitates the selection of the number of countries to display.\nThe heart of the app resides in the ‘Plot’ tab, where users can select any two factors, including the happiness score, for the x and y axes. Each selection generates a data point on the graph, and upon hovering over these points, Plotly provides detailed insights related to the chosen factors and countries. This setup grants users the power to delve into individual factor analyses and country comparisons, fostering a deeper understanding of the data dynamics."
  },
  {
    "objectID": "index.html#analysis",
    "href": "index.html#analysis",
    "title": "World Happiness Report",
    "section": "Analysis",
    "text": "Analysis\nThe Happiness Report examining six factors in the year 2019 as an example.\n\nlibrary(markdown)\nlibrary(DT)\nlibrary(ggplot2)\nlibrary(dplyr)\nlibrary(plotly)\nlibrary(here)\nlibrary(sf)\nlibrary(rnaturalearth)\nlibrary(rnaturalearthdata)\nlibrary(grid)\nlibrary(patchwork)\n\n\nggplot(data = happiness2015) +\n      geom_point(aes(x = Economy, y = Happiness.Score, \n                            colour = Region, label = Country), size = 3) +\n      geom_smooth(aes(x = Economy, y = Happiness.Score), \n                  method = \"lm\", color = \"black\", se = FALSE) +\n      ggtitle(\"Economy vs Happiness Score\") +\n      theme_bw() +\n      theme(legend.position = \"bottom\")"
  },
  {
    "objectID": "index.html#discussion",
    "href": "index.html#discussion",
    "title": "World Happiness Report",
    "section": "Discussion",
    "text": "Discussion\nAcross the temporal spectrum from 2015 to 2023, our observation between Family (social support) and Happiness Score revealed intriguing insights. Initially, higher degrees of family support aligned with notably higher happiness scores. Subsequently, while the scores remained elevated, both the number of instances and the degree of family support slightly decreased. However, a resurgence followed, mirroring the initial phase’s trend before experiencing a slight decline towards the end. Overall, this analysis underscores a proportional relationship, emphasizing that increased family support correlates positively with higher happiness scores—a compelling testament to its pivotal role as a contributing factor in fostering well-being.\nThe correlation between health and happiness scores appears relatively consistent from 2015 to 2023, showing limited variations. Western European countries consistently maintain top positions, while Sub-Saharan African nations consistently rank at the bottom in this regard. Over the years, a clear pattern emerged: as the economy (GDP per capita) grew, so did happiness scores. Though the intensity varied, the trend remained consistent. In 2022, this link intensified, indicating a proportional relationship between a thriving economy and higher happiness.\nWhen comparing Trust (government corruption) and Happiness Score across countries, intriguing trends emerged. Western European nations like Finland, Denmark, Switzerland, and Sweden showed higher corruption levels but sustained higher happiness. Conversely, countries like New Zealand, Singapore, and Qatar followed a similar pattern. Rwanda depicted the highest corruption and lowest happiness, while Sub-Saharan and some Eastern European nations showcased lower corruption but also lower happiness levels overall.\nUpon analyzing the relationship between happiness scores and freedom, it’s evident that since 2019, Afghanistan consistently exhibits the lowest happiness score. Meanwhile, the Western European region consistently maintains a top-ranking position in happiness scores from 2015 to 2023. When examining the correlation between happiness scores and generosity, it becomes evident that Finland consistently secures the top position throughout the years 2015 to 2023 in terms of happiness scores."
  },
  {
    "objectID": "index.html#major-events-affecting-happiness-scores-2015-2023",
    "href": "index.html#major-events-affecting-happiness-scores-2015-2023",
    "title": "World Happiness Report",
    "section": "Major Events Affecting Happiness Scores (2015-2023):",
    "text": "Major Events Affecting Happiness Scores (2015-2023):\n\ncovid_years_data &lt;- bind_rows(\n    happiness2015 %&gt;% mutate(Year = 2015),\n    happiness2016 %&gt;% mutate(Year = 2016),\n    happiness2017 %&gt;% mutate(Year = 2017),\n    happiness2018%&gt;% mutate(Year = 2018),\n    happiness2019%&gt;% mutate(Year = 2019),\n    happiness2020 %&gt;% mutate(Year = 2020),\n    happiness2021 %&gt;% mutate(Year = 2021),\n    happiness2022 %&gt;% mutate(Year = 2022),\n    happiness2023 %&gt;% mutate(Year = 2023)\n  )\n\nfiltered_covid_data &lt;- covid_years_data %&gt;%\n      filter(Country %in% c(\"India\", \"China\", \"United States\")) %&gt;%\n      arrange(Year, Country) %&gt;%\n      group_by(Year) %&gt;%\n      #slice_head(n = input$num_countries) %&gt;%\n      ungroup()\n\n\nplot_ly(data = filtered_covid_data, x = ~Year, y = ~Happiness.Rank, \n        color = ~Region, type = 'scatter', mode = 'lines+markers', \n        hoverinfo = 'text',\n        text = ~paste(\"Country:\", Country, \"&lt;br&gt;Year:\", \n                      Year, \"&lt;br&gt;Happiness Rank:\", \n                      Happiness.Rank)) %&gt;%\n  layout(title = list(text = \"Happiness Rank Trends\"),\n         margin = list(t = 50),\n         xaxis = list(title = 'Year', tickvals = c('2015','2016',\n                                                   '2017','2018',\n                                                   '2019','2020', \n                                                   '2021', '2022', \n                                                   '2023'),\n                      ticktext = c('2015','2016','2017',\n                                   '2018','2019','2020', \n                                   '2021', '2022', '2023')),\n         yaxis = list(title = 'Happiness Score'),\n         hovermode = 'closest')\n\n\n2016 Brexit Vote:\nThe United Kingdom experienced political and economic uncertainty, affecting its happiness scores, as well as indirect impacts on EU member states.\n\n\n\nBrexit Vote affecting happiness score in UK\n\n\nIn 2016, the graph shows that the happiness rank for the United Kingdom increased, indicating a decrease in happiness. This is likely due to the uncertainty and division caused by the Brexit vote, as it introduced concerns about the UK’s economic future and its citizens’ identity within Europe. Such socio-political events typically create anxiety and can negatively impact the overall mood of the nation.\n\n\n2017-2018 US-China Trade War:\nLed to economic repercussions in the United States and China, as well as in countries with strong trade ties to these nations.\n\n\n\nUS_China Trade War\n\n\nThe 2017-2018 US-China trade war had a significant impact on the happiness ranks of both countries. It led to economic uncertainties, job losses, and disrupted trade, which can contribute to decreased happiness among the population. The trade war also affected global economic stability, indirectly influencing happiness ranks in other nations closely tied to the US-China trade relationship.\n\n\n2019-2023 COVID-19 Pandemic:\nGlobally affected all countries, with significant impacts on mental health, economic stability, and overall happiness. Countries like Italy, Spain, the United States, Brazil, and India were among the hardest hit due to high infection and mortality rates.\n\n\n\nCovid-19 effect on happiness rank\n\n\nThe graph indicates a general increase in happiness rank for most regions during the COVID-19 pandemic, suggesting a decline in happiness. Some regions show recovery post-pandemic, while others continue to experience lower happiness levels, with varying impacts across different parts of the world. india, china, Usa\n\n\n2022 Pakistan Floods:\nHeavy monsoon rains led to catastrophic flooding in Pakistan, causing massive displacement and damage to infrastructure and potentially affecting the happiness rank.\n\n\n\nPakistan floods affecting happiness rank\n\n\nIn 2022, Pakistan experienced a significant increase in its happiness rank, signifying a decrease in happiness. This was likely influenced by catastrophic flooding caused by heavy monsoon rains, resulting in displacement and infrastructure damage, which typically lowers overall happiness."
  },
  {
    "objectID": "index.html#miscellaneous-plots",
    "href": "index.html#miscellaneous-plots",
    "title": "World Happiness Report",
    "section": "Miscellaneous Plots:",
    "text": "Miscellaneous Plots:\n\nWorld Heatmap:\n\nworld &lt;- world %&gt;% \n      left_join(happiness2015, by = c(\"name\" = \"Country\"))\n\nggplot(data = world) +\n      geom_sf(aes(fill = Happiness.Score, geometry = geometry), color = NA) + \n      scale_fill_viridis_c() +\n      theme_minimal() +\n      labs(fill = \"Happiness Score\", title = \"World Happiness Map 2015\")\n\n\n\n\n\n\nTrend Comparison:\n\nfiltered_trend &lt;- covid_years_data |&gt; \n  filter(Country %in% c(\"India\", \"China\", \"United States\"))\n\n\np &lt;- ggplot(filtered_trend, aes(x = Year, y = Economy, color = Country)) +\n      geom_line() +\n      geom_point() +\n      scale_x_continuous(breaks = unique(filtered_trend$Year)) +\n      theme_minimal() +\n      #theme(legend.position = \"none\") +\n      labs(title = \"Time Series Plot of Economy\")\n\nq &lt;- ggplot(filtered_trend, aes(x = Year, y = Happiness.Score, \n                                color = Country)) +\n      geom_line() +\n      geom_point() +\n      scale_x_continuous(breaks = unique(filtered_trend$Year)) + \n      theme_minimal() + \n      #theme(legend.position = \"none\") +\n      labs(title = \"Time Series of Happiness Score\")\n\n(p|q) + plot_layout(guides = \"collect\") &\n  theme(legend.position = \"bottom\")"
  },
  {
    "objectID": "index.html#conclusion",
    "href": "index.html#conclusion",
    "title": "World Happiness Report",
    "section": "Conclusion",
    "text": "Conclusion\nThis World Happiness Shiny Application is not just a tool for data exploration, it is a window into the diverse and dynamic nature of global well-being. It serves as a valuable resource for researchers, policymakers, educators, and anyone interested in the study of happiness. By offering user-driven, interactive data analysis, it empowers users to uncover the complex tapestry of factors that contribute to a happier and more fulfilling global society."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "World Happiness Report",
    "section": "",
    "text": "This project was developed by Plot Pioneers For INFO 526 - Data Analysis & Visualization at the University of Arizona, taught by Dr. Greg Chism. The team is comprised of the following team members.\n\nAthira Thekkemadathil Anilkumar: Graduate student majoring in Data Science.\nShalon Walter: Graduate student majoring in Data Science.\nPriyarsha Vallabhaneni: Graduate student pursuing Data Science.\nChethana Thondebhavi Shantha Kumar: Graduate student majoring in Data Science."
  },
  {
    "objectID": "presentation.html#introduction",
    "href": "presentation.html#introduction",
    "title": "World Happiness Report",
    "section": "Introduction",
    "text": "Introduction\n\n\nThe World Happiness Application aims to uncover the keys to societal happiness and well-being, leveraging data from the World Happiness Report.\nA user-friendly Shiny app to analyze factors affecting global happiness and visualize worldwide happiness rankings effectively.\nInteractive features to explore and understand how various factors influence happiness across different regions globally."
  },
  {
    "objectID": "presentation.html#dataset-description",
    "href": "presentation.html#dataset-description",
    "title": "World Happiness Report",
    "section": "Dataset Description",
    "text": "Dataset Description\n\n\nPublished annually by the United Nations. https://worldhappiness.report/\nObservations vary from 149 to 158 countries per year.\nThe report considers several key indicators to assess happiness levels, such as income, social support, life expectancy, freedom to make life choices, generosity, and perceptions of corruption."
  },
  {
    "objectID": "presentation.html#us-china-trade-war",
    "href": "presentation.html#us-china-trade-war",
    "title": "World Happiness Report",
    "section": "2017-2018 US-China Trade War",
    "text": "2017-2018 US-China Trade War"
  },
  {
    "objectID": "presentation.html#pakistan-floods",
    "href": "presentation.html#pakistan-floods",
    "title": "World Happiness Report",
    "section": "2022 Pakistan Floods",
    "text": "2022 Pakistan Floods"
  },
  {
    "objectID": "presentation.html#brexit-vote",
    "href": "presentation.html#brexit-vote",
    "title": "World Happiness Report",
    "section": "2016 Brexit Vote",
    "text": "2016 Brexit Vote"
  },
  {
    "objectID": "presentation.html#covid-19-pandemic",
    "href": "presentation.html#covid-19-pandemic",
    "title": "World Happiness Report",
    "section": "2019-2023 COVID-19 Pandemic",
    "text": "2019-2023 COVID-19 Pandemic\n\nCovid_19 affecting happiness rank"
  },
  {
    "objectID": "presentation.html#conclusion",
    "href": "presentation.html#conclusion",
    "title": "World Happiness Report",
    "section": "Conclusion",
    "text": "Conclusion\nBased on the provided plots, here are the summarized points reflecting the impact of major events on global happiness:\n1. The COVID-19 pandemic caused a universal decline in happiness, reflected in the data as a noticeable dip for regions such as Eastern Asia and North America, due to health crises and economic downturns.\n2. Specific events like the US-China Trade War, Brexit, and natural disasters like the Pakistan floods had varied impacts on different regions’ happiness rankings, with some experiencing more pronounced fluctuations than others, such as the sharp changes in happiness rank for Pakistan around the time of the floods."
  }
]